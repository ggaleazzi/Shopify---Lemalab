{%- assign request_locale = request.locale %}

{%- assign shop_published_locales = shop.published_locales %}
{%- assign use_international_domains = false %}

{%- if shop.metafields.translation_lab.published_locales %}
{%- assign shop_published_locales = shop.metafields.translation_lab.published_locales %}
{%- assign use_international_domains = true %}
{%- endif %}

<script>

  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
      value: function(predicate) {
        // 1. Let O be ? ToObject(this value).
        if (this == null) {
          throw TypeError('"this" is null or not defined');
        }

        var o = Object(this);

        // 2. Let len be ? ToLength(? Get(O, "length")).
        var len = o.length >>> 0;

        // 3. If IsCallable(predicate) is false, throw a TypeError exception.
        if (typeof predicate !== 'function') {
          throw TypeError('predicate must be a function');
        }

        // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
        var thisArg = arguments[1];

        // 5. Let k be 0.
        var k = 0;

        // 6. Repeat, while k < len
        while (k < len) {
          // a. Let Pk be ! ToString(k).
          // b. Let kValue be ? Get(O, Pk).
          // c. Let testResult be ToBoolean(? Call(predicate, T, < kValue, k, O >)).
          // d. If testResult is true, return kValue.
          var kValue = o[k];
          if (predicate.call(thisArg, kValue, k, o)) {
            return kValue;
          }
          // e. Increase k by 1.
          k++;
        }

        // 7. Return undefined.
        return undefined;
      },
      configurable: true,
      writable: true
    });
  }

  (function () {

    var useInternationalDomains = {{ use_international_domains | json }};

    function buildLanguageList() {
      var languageListJson = '[{%- for locale in shop_published_locales %}{\
"name": "{{locale.name | split: "(" | first | strip}}",\
"endonym_name": "{{ locale.endonym_name | split: "(" | first | strip}}",\
"iso_code": "{{ locale.iso_code }}",\
"primary": {{ locale.primary }},\
"flag": "{{ locale.iso_code | append: ".png" | asset_url }}",\
"domain": {{ locale.domain | json }}\
}{% unless forloop.last %},{% endunless -%}{%- endfor %}]';
      return JSON.parse(languageListJson);
    }

    function getSavedLocale(langList) {
      var savedLocale = localStorage.getItem('translation-lab-lang');
      var sl = savedLocale ? langList.find(x => x.iso_code.toLowerCase() === savedLocale.toLowerCase()) : null;
      return sl ? sl.iso_code : null;
    }

    function getBrowserLocale(langList) {
      var browserLocale = navigator.language;
      if (browserLocale) {
        var localeParts = browserLocale.split('-');
        var bl = localeParts[0] ? langList.find(x => x.iso_code.toLowerCase().startsWith(localeParts[0])) : null;
        return bl ? bl.iso_code : null;
      } else {
        return null;
      }
    }

    function redirectUrlBuilderFunction(primaryLocale) {
      var shopDomain = 'https://{{shop.domain}}';
      if (window.Shopify.designMode) {
      	shopDomain = 'https://{{shop.permanent_domain}}';
      }
      var currentLocale = '{{request.locale.iso_code}}'.toLowerCase();
      var currentLocaleRegEx = new RegExp('^\/' + currentLocale, "ig");
      var primaryLocaleLower = primaryLocale.toLowerCase();
      var pathname = window.location.pathname;
      var queryString = window.location.search || '';
      return function build(redirectLocale) {
        if (!redirectLocale) {
          return null;
        }
        var redirectLocaleLower = redirectLocale.toLowerCase();
        if (currentLocale !== redirectLocaleLower) {
          if (useInternationalDomains) {
            //var languageList = buildLanguageList();
            //var internationalDomain = languageList.find(function (x) { return x.iso_code.toLowerCase() === redirectLocaleLower; });
            //if (internationalDomain) {
            //  return 'https://' + internationalDomain.domain + pathname + queryString;
            //}
          }
          else {
            if (redirectLocaleLower === primaryLocaleLower) {
              return shopDomain + pathname.replace(currentLocaleRegEx, '') + queryString;
            } else if (primaryLocaleLower === currentLocale) {
              return shopDomain + '/' + redirectLocaleLower + pathname + queryString;
            } else {
              return shopDomain + '/' + pathname.replace(currentLocaleRegEx, redirectLocaleLower) + queryString;
            }
          }
        }
        return null;
      }
    }

    function getRedirectLocale(languageList) {
      var savedLocale = getSavedLocale(languageList);
      var browserLocale = getBrowserLocale(languageList);
      var preferredLocale = null;

      var redirectLocale = null;

      if (savedLocale) {
        redirectLocale = savedLocale;
      } else if (preferredLocale) {
        redirectLocale = preferredLocale;
      } else if (browserLocale) {
        redirectLocale = browserLocale;
      }
      return redirectLocale;
    }

    function configure() {
      var languageList = buildLanguageList();
      var primaryLanguage = languageList.find(function (x) { return x.primary; });
      if (!primaryLanguage && !primaryLanguage.iso_code) {
        // error: there should be atleast one language set as primary
        return;
      }

      var redirectUrlBuilder = redirectUrlBuilderFunction(primaryLanguage.iso_code);

      var redirectLocale = getRedirectLocale(languageList);

      var redirectUrl = redirectUrlBuilder(redirectLocale);
      redirectUrl && window.location.assign(redirectUrl);
    }

    var botPatterns = "(bot|Googlebot\/|Googlebot-Mobile|Googlebot-Image|Googlebot-News|Googlebot-Video|AdsBot-Google([^-]|$)|AdsBot-Google-Mobile|Feedfetcher-Google|Mediapartners-Google|APIs-Google|bingbot|Slurp|exabot|ia_archiver|YandexBot|YandexImages|YandexAccessibilityBot|YandexMobileBot|YandexMetrika|YandexTurbo|YandexImageResizer|YandexVideo|YandexAdNet|YandexBlogs|YandexCalendar|YandexDirect|YandexFavicons|YaDirectFetcher|YandexForDomain|YandexMarket|YandexMedia|YandexMobileScreenShotBot|YandexNews|YandexOntoDB|YandexPagechecker|YandexPartner|YandexRCA|YandexSearchShop|YandexSitelinks|YandexSpravBot|YandexTracker|YandexVertis|YandexVerticals|YandexWebmaster|YandexScreenshotBot|Baiduspider|facebookexternalhit|Sogou|DuckDuckBot|BUbiNG|crawler4j|S[eE][mM]rushBot|Google-Adwords-Instant|BingPreview\/|Bark[rR]owler|DuckDuckGo-Favicons-Bot|AppEngine-Google|Google Web Preview|acapbot|Baidu-YunGuanCe|Feedly|Feedspot|google-xrawler|Google-Structured-Data-Testing-Tool|Google-PhysicalWeb|Google Favicon|Google-Site-Verification|Gwene|SentiBot|FreshRSS)";
    var re = new RegExp(botPatterns, 'i');
    if (!re.test(navigator.userAgent)) {
      configure();
    }

  })();
</script>